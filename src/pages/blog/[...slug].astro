---
import BlogDetailHeader from "@/components/BlogDetailHeader";
import Layout from "@/layouts/layout.astro";
import Prose from "@/layouts/prose.astro";
import { getCollection, render } from "astro:content";
import { ArrowLeft } from "lucide-react";
import BackToTop from "@/components/BackToTop";
import { getEntries } from "astro:content";
import PostCard from "@/components/PostCard";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);

const relatedPosts = await getEntries(post.data.relatedPosts || []);
---

<Layout title={post.data.title} description={post.data.description}>
  <div class="max-w-[760px] mx-auto pt-32 pb-20 px-4">
    <a
      class="inline-flex
    items-center
    text-muted-foreground
    hover:text-primary
    transition-colors
    mb-8"
      href="/blog"
    >
      <ArrowLeft className="mr-2 h-4 w-4" />
      Back To Blog
    </a>

    <article class="animate-fade-in">
      <BlogDetailHeader
        tags={post.data.tags}
        title={post.data.title}
        description={post.data.description}
        pubDate={post.data.pubDate}
      />
      <Prose>
        <Content />
      </Prose>
    </article>
    {
      relatedPosts.length > 0 && (
        <section class="mt-16 pt-8 border-t border-border">
          <h2 class="text-2xl font-bold mb-6 text-primary">Related Posts</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {relatedPosts.map((post) => (
              <PostCard post={post} />
            ))}
          </div>
        </section>
      )
    }

    <BackToTop client:load />
  </div>
</Layout>
